[b]Def szybki[/b] - piki, ³uki, CK, zwiad.

[code]
javascript:Array.prototype.contains = function(obj) {
  var i;
  listed = false;
  for (i=0;i<this.length;i++) {
     if (this[i] === obj) {
       listed = true;
       break;
      }
    }
  return listed;
 };

function getGameDoc() {
     getdoc = window.document;
     if (! getdoc.URL.match('game\.php')) {
       for (var i=0; i<window.frames.length; i++) {
          if (window.frames[i].document.URL.match('game\.php')) {
            getdoc = window.frames[i].document;
           }
         }
       }
     return getdoc;
   };
units = Array('spear','sword','axe','archer','spy','light','heavy','marcher','ram','catapult');
doc = getGameDoc(); 
form = doc.units; 
inputs = form.getElementsByTagName('input'); 
for (var i=0; i<inputs.length; i++) { 
   if (inputs[i].type == 'text') { 
     if (units.contains(inputs[i].name)) {
       next = inputs[i].nextSibling; 
       do {next = next.nextSibling;} while (next.nodeType != 1); 
       s = next.firstChild.nodeValue;
       s = next.firstChild.nodeValue.replace(/\(/g, "").replace(/\)/g,"");  
       if (inputs[i].name=='spear') insertUnit(form.elements[inputs[i].name],s); 
       if (inputs[i].name=='archer') insertUnit(form.elements[inputs[i].name],s); 
       if (inputs[i].name=='heavy') insertUnit(form.elements[inputs[i].name],s); 
       if (inputs[i].name=='spy') insertUnit(form.elements[inputs[i].name],s);
      }
    }
  }
javascript:document.forms[0].support.focus();
[/code]

[b]Def zwyk³y[/b] - piki, miecze, ³uki, CK, zwiad.

[code]
javascript:Array.prototype.contains = function(obj) {
  var i;
  listed = false;
  for (i=0;i<this.length;i++) {
     if (this[i] === obj) {
       listed = true;
       break;
      }
    }
  return listed;
 };

function getGameDoc() {
     getdoc = window.document;
     if (! getdoc.URL.match('game\.php')) {
       for (var i=0; i<window.frames.length; i++) {
          if (window.frames[i].document.URL.match('game\.php')) {
            getdoc = window.frames[i].document;
           }
         }
       }
     return getdoc;
   };
units = Array('spear','sword','axe','archer','spy','light','heavy','marcher','ram','catapult');
doc = getGameDoc(); 
form = doc.units; 
inputs = form.getElementsByTagName('input'); 
for (var i=0; i<inputs.length; i++) { 
   if (inputs[i].type == 'text') { 
     if (units.contains(inputs[i].name)) {
       next = inputs[i].nextSibling; 
       do {next = next.nextSibling;} while (next.nodeType != 1); 
       s = next.firstChild.nodeValue;
       s = next.firstChild.nodeValue.replace(/\(/g, "").replace(/\)/g,"");  
       if (inputs[i].name=='spear') insertUnit(form.elements[inputs[i].name],s); 
       if (inputs[i].name=='archer') insertUnit(form.elements[inputs[i].name],s); 
       if (inputs[i].name=='heavy') insertUnit(form.elements[inputs[i].name],s); 
       if (inputs[i].name=='spy') insertUnit(form.elements[inputs[i].name],s);
       if (inputs[i].name=='sword') insertUnit(form.elements[inputs[i].name],s);
      }
    }
  }
javascript:document.forms[0].support.focus();
[/code]